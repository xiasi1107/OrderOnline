{"version":3,"file":"user.js","sources":["api/user.js"],"sourcesContent":["import { http } from './api'\n\n/**\n * 获取用户信息\n */\nexport const getUserInfo = () => {\r\n//\tawait uni.request({\r\n//\t    url: http + '/user/getUserInfo',\r\n//\t    method: 'GET',\r\n//\t    header: {\r\n//\t        'Authorization': uni.getStorageSync('openid')\r\n//\t    },\r\n//\t    success: (res) => {\r\n//          console.log('getUserInfo: ok')\t\r\n//\t        success(res)\r\n//\t    },\r\n//\t    fail: (res) => {\r\n//\t        fail(res)\r\n//\t    }\r\n//\t})\n  return new Promise((resolve) => {\n    // 模拟从本地存储获取用户信息\n    const userInfo = {\n      avatar: uni.getStorageSync('avatar') || '/static/logo.png',\n      nickName: uni.getStorageSync('nickName') || '用户' + Math.floor(Math.random() * 10000),\n      phone: uni.getStorageSync('phone') || '',\n      address: uni.getStorageSync('address') || ''\n    }\n    \n    // 模拟接口延迟\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        data: userInfo,\n        msg: '获取成功'\n      })\n    }, 300)\n  })\n}\n\n/**\n * 更新用户信息\n * @param {Object} userData - 用户数据\n * @param {string} userData.avatar - 头像URL\n * @param {string} userData.nickName - 昵称\n * @param {string} userData.phone - 手机号\n * @param {string} userData.address - 地址\n */\nexport const updateUserInfo = (userData) => {\r\n//\tawait uni.request({\r\n//\t    url: http + '/user/getUserInfo',\r\n//\t    method: 'POST',\r\n//\t    header: {\r\n//\t        'Authorization': uni.getStorageSync('openid')\r\n//          'Content-Type': 'application/json'\r\n//\t    },\r\n//      data: userData,\r\n//\t    success: (res) => {\r\n//          console.log('getUserInfo: ok')\t\r\n//\t        success(res)\r\n//\t    },\r\n//\t    fail: (res) => {\r\n//\t        fail(res)\r\n//\t    }\r\n//\t})\n  return new Promise((resolve) => {\n    // 模拟接口延迟\n    setTimeout(() => {\n      // 保存到本地存储\n      if (userData.avatar) uni.setStorageSync('avatar', userData.avatar)\n      if (userData.nickName) uni.setStorageSync('nickName', userData.nickName)\n      if (userData.phone) uni.setStorageSync('phone', userData.phone)\n      if (userData.address) uni.setStorageSync('address', userData.address)\n      \n      resolve({\n        code: 200,\n        data: {\n          ...userData,\n          updateTime: new Date().toISOString()\n        },\n        msg: '更新成功'\n      })\n    }, 500)\n  })\n}\n\n/**\n * 退出登录\n */\nexport const logout = () => {\r\n//\tawait uni.request({\r\n//\t    url: http + '/user/logout',\r\n//\t    method: 'POST',\r\n//\t    header: {\r\n//\t        'Authorization': uni.getStorageSync('openid')\r\n//\t    },\r\n//\t    success: (res) => {\r\n//          console.log('logout: ok')\t\r\n//\t        success(res)\r\n//\t    },\r\n//\t    fail: (res) => {\r\n//\t        fail(res)\r\n//\t    }\r\n//\t})\n  return new Promise((resolve) => {\n    // 清除本地存储的用户信息\n    uni.removeStorageSync('token')\n    uni.removeStorageSync('avatar')\n    uni.removeStorageSync('nickName')\n    uni.removeStorageSync('phone')\n    uni.removeStorageSync('address')\n    \n    resolve({\n      code: 200,\n      msg: '退出成功'\n    })\n  })\n}\n\n/**\n * 上传头像\n * @param {string} filePath - 头像文件路径\n */\nexport const uploadAvatar = (filePath) => {\r\n//\tawait uni.request({\r\n//\t    url: http + '/user/uploadAvatar',\r\n//\t    method: 'POST',\r\n//\t    header: {\r\n//\t        'Authorization': uni.getStorageSync('openid')\r\n//\t    },\r\n//\t    success: (res) => {\r\n//          console.log('uploadAvatar: ok')\t\r\n//\t        success(res)\r\n//\t    },\r\n//\t    fail: (res) => {\r\n//\t        fail(res)\r\n//\t    }\r\n//\t})\n  return new Promise((resolve) => {\n    // 模拟上传延迟\n    setTimeout(() => {\n      // 模拟生成头像URL\n      const avatarUrl = `/static/logo.png`\n      \n      resolve({\n        code: 200,\n        data: {\n          avatarUrl\n        },\n        msg: '上传成功'\n      })\n    }, 800)\n  })\n}"],"names":["uni"],"mappings":";;AAKY,MAAC,cAAc,MAAM;AAe/B,SAAO,IAAI,QAAQ,CAAC,YAAY;AAE9B,UAAM,WAAW;AAAA,MACf,QAAQA,cAAG,MAAC,eAAe,QAAQ,KAAK;AAAA,MACxC,UAAUA,cAAG,MAAC,eAAe,UAAU,KAAK,OAAO,KAAK,MAAM,KAAK,OAAM,IAAK,GAAK;AAAA,MACnF,OAAOA,cAAG,MAAC,eAAe,OAAO,KAAK;AAAA,MACtC,SAASA,cAAG,MAAC,eAAe,SAAS,KAAK;AAAA,IAC3C;AAGD,eAAW,MAAM;AACf,cAAQ;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,MACb,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;AAUY,MAAC,iBAAiB,CAAC,aAAa;AAiB1C,SAAO,IAAI,QAAQ,CAAC,YAAY;AAE9B,eAAW,MAAM;AAEf,UAAI,SAAS;AAAQA,sBAAG,MAAC,eAAe,UAAU,SAAS,MAAM;AACjE,UAAI,SAAS;AAAUA,sBAAG,MAAC,eAAe,YAAY,SAAS,QAAQ;AACvE,UAAI,SAAS;AAAOA,sBAAG,MAAC,eAAe,SAAS,SAAS,KAAK;AAC9D,UAAI,SAAS;AAASA,sBAAG,MAAC,eAAe,WAAW,SAAS,OAAO;AAEpE,cAAQ;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,GAAG;AAAA,UACH,aAAY,oBAAI,KAAM,GAAC,YAAa;AAAA,QACrC;AAAA,QACD,KAAK;AAAA,MACb,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;AAKY,MAAC,SAAS,MAAM;AAe1B,SAAO,IAAI,QAAQ,CAAC,YAAY;AAE9BA,kBAAG,MAAC,kBAAkB,OAAO;AAC7BA,kBAAG,MAAC,kBAAkB,QAAQ;AAC9BA,kBAAG,MAAC,kBAAkB,UAAU;AAChCA,kBAAG,MAAC,kBAAkB,OAAO;AAC7BA,kBAAG,MAAC,kBAAkB,SAAS;AAE/B,YAAQ;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,IACX,CAAK;AAAA,EACL,CAAG;AACH;AAMY,MAAC,eAAe,CAAC,aAAa;AAexC,SAAO,IAAI,QAAQ,CAAC,YAAY;AAE9B,eAAW,MAAM;AAEf,YAAM,YAAY;AAElB,cAAQ;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,UACJ;AAAA,QACD;AAAA,QACD,KAAK;AAAA,MACb,CAAO;AAAA,IACF,GAAE,GAAG;AAAA,EACV,CAAG;AACH;;;;;"}