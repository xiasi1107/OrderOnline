{"version":3,"file":"order.js","sources":["api/order.js"],"sourcesContent":["import { http } from './api'\r\n/**\r\n * 创建订单\r\n * @param {Object} orderData 订单数据\r\n * @param {Array} orderData.items 商品列表\r\n * @param {number} orderData.totalPrice 总价\r\n * @param {string} orderData.contactName 联系人姓名\r\n * @param {string} orderData.phone 手机号\r\n * @param {string} orderData.address 收货地址\r\n * @param {string} orderData.remark 备注\r\n */\r\nexport const createOrder = (orderData, success, fail) => {\r\n\t//\tawait uni.request({\r\n\t//\t    url: http + '/user/createOrder',\r\n\t//\t    method: 'POST',\r\n\t//\t    header: {\r\n\t//\t         \"Content-Type\": \"application/json\"\r\n\t//\t    },\r\n\t//      data：orderData,\r\n\t//\t    success: (res) => {\r\n\t//          console.log('createOrder: ok')\r\n\t//\t        success(res)\r\n\t//\t    },\r\n\t//\t    fail: (res) => {\r\n\t//\t        fail(res)\r\n\t//\t    }\r\n\t//\t})\r\n  return new Promise((resolve) => {\r\n    // 模拟处理时间\r\n    setTimeout(() => {\r\n      resolve({\r\n        code: 200,\r\n        data: {\r\n          orderId: 'ORD' + Date.now(),\r\n          totalPrice: orderData.totalPrice,\r\n          items: orderData.items,\r\n          contactName: orderData.contactName,\r\n          phone: orderData.phone,\r\n          address: orderData.address,\r\n          remark: orderData.remark,\r\n          createTime: new Date().toISOString(),\r\n          status: 0\r\n        },\r\n        msg: \"下单成功\"\r\n      });\r\n    }, 800);\r\n  });\r\n};\r\n\r\n/**\r\n * 获取订单列表\r\n */\r\nexport const getOrderList = ( success, fail) => {\r\n\t//\tawait uni.request({\r\n\t//\t    url: http + '/user/getOrderList',\r\n\t//\t    method: 'GET',\r\n\t//\t    header: {\r\n\t//\t         \"Content-Type\": \"application/json\"\r\n\t//\t    },\r\n\t//      data：{\r\n\t//\t        orderId,    \r\n\t//      },\r\n\t//\t    success: (res) => {\r\n\t//          console.log('getOrderList: ok')\r\n\t//\t        success(res)\r\n\t//\t    },\r\n\t//\t    fail: (res) => {\r\n\t//\t        fail(res)\r\n\t//\t    }\r\n\t//\t})\r\n  return new Promise((resolve) => {\r\n    // 模拟数据\r\n    setTimeout(() => {\r\n      resolve({\r\n        code: 200,\r\n        data: [\r\n          {\r\n            orderId: 'ORD123456789',\r\n            totalPrice: 88.00,\r\n            items: [\r\n              { \r\n                id: 1, \r\n                name: \"宫保鸡丁\", \r\n                price: 28.00, \r\n                quantity: 2 \r\n              },\r\n              { \r\n                id: 3, \r\n                name: \"清炒时蔬\", \r\n                price: 18.00, \r\n                quantity: 1 \r\n              }\r\n            ],\r\n            contactName: \"张三\",\r\n            phone: \"13800138000\",\r\n            address: \"北京市朝阳区某某街道123号\",\r\n            remark: \"请尽快送达\",\r\n            status: 0, // 0=待接单\r\n            createTime: new Date().toISOString()\r\n          },\r\n          {\r\n            orderId: 'ORD987654321',\r\n            totalPrice: 56.00,\r\n            items: [\r\n              { \r\n                id: 2, \r\n                name: \"红烧肉\", \r\n                price: 38.00, \r\n                quantity: 1 \r\n              },\r\n              { \r\n                id: 4, \r\n                name: \"米饭\", \r\n                price: 2.00, \r\n                quantity: 2 \r\n              },\r\n              { \r\n                id: 5, \r\n                name: \"酸辣汤\", \r\n                price: 14.00, \r\n                quantity: 1 \r\n              }\r\n            ],\r\n            contactName: \"李四\",\r\n            phone: \"13900139000\",\r\n            address: \"北京市海淀区某某小区5号楼\",\r\n            remark: \"不要辣\",\r\n            status: 2, // 2=派送中\r\n            createTime: \"2023-05-19T18:30:00Z\"\r\n          },\r\n          {\r\n            orderId: 'ORD567891234',\r\n            totalPrice: 120.00,\r\n            items: [\r\n              { \r\n                id: 6, \r\n                name: \"烤鸭\", \r\n                price: 98.00, \r\n                quantity: 1 \r\n              },\r\n              { \r\n                id: 7, \r\n                name: \"春饼\", \r\n                price: 10.00, \r\n                quantity: 2 \r\n              },\r\n              { \r\n                id: 8, \r\n                name: \"黄瓜条\", \r\n                price: 6.00, \r\n                quantity: 2 \r\n              }\r\n            ],\r\n            contactName: \"王五\",\r\n            phone: \"13700137000\",\r\n            address: \"北京市西城区某某胡同12号\",\r\n            remark: \"\",\r\n            status: 3, // 3=已完成\r\n            createTime: \"2023-05-18T12:15:00Z\"\r\n          }\r\n        ],\r\n        msg: \"获取成功\"\r\n      });\r\n    }, 500);\r\n  });\r\n};\r\n\r\n/**\r\n * 获取订单详情（模拟接口）\r\n * @param {string} orderId - 订单ID\r\n * @returns {Promise<Object>} 订单详情数据\r\n */\r\nexport const getOrderDetail = (orderId, success, fail) => {\r\n\t//\tawait uni.request({\r\n\t//\t    url: http + '/user/getOrderDetail',\r\n\t//\t    method: 'GET',\r\n\t//\t    header: {\r\n\t//\t         \"Content-Type\": \"application/json\"\r\n\t//\t    },\r\n\t//\t    success: (res) => {\r\n\t//          console.log('getOrderDetail: ok')\r\n\t//\t        success(res)\r\n\t//\t    },\r\n\t//\t    fail: (res) => {\r\n\t//\t        fail(res)\r\n\t//\t    }\r\n\t//\t})\r\n  return new Promise((resolve) => {\r\n    // 模拟延迟响应\r\n    setTimeout(() => {\r\n      // 模拟订单数据\r\n      const mockOrder = {\r\n        code: 200,\r\n        data: {\r\n          orderId: orderId || 'ORD123456789',\r\n          status: 3,\r\n          totalPrice: 88.50,\r\n          createTime: '2025-06-06 12:30:45',\r\n          contact: {\r\n            name: '张三',\r\n            phone: '13812345678',\r\n            address: '北京市朝阳区建国路88号'\r\n          },\r\n          items: [\r\n            {\r\n              id: 1,\r\n              name: '宫保鸡丁',\r\n              price: 28.00,\r\n              quantity: 2\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '鱼香肉丝',\r\n              price: 26.00,\r\n              quantity: 1\r\n            },\r\n            {\r\n              id: 3,\r\n              name: '米饭',\r\n              price: 2.50,\r\n              quantity: 2\r\n            }\r\n          ]\r\n        },\r\n        msg: '获取成功'\r\n      };\r\n\r\n      resolve(mockOrder);\r\n    }, 800); // 800ms延迟\r\n  });\r\n};"],"names":[],"mappings":"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"}