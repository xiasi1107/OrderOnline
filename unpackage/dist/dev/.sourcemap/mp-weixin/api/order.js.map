{"version":3,"file":"order.js","sources":["api/order.js"],"sourcesContent":["/**\n * 创建订单\n * @param {Object} orderData 订单数据\n * @param {Array} orderData.items 商品列表\n * @param {number} orderData.totalPrice 总价\n * @param {string} orderData.contactName 联系人姓名\n * @param {string} orderData.phone 手机号\n * @param {string} orderData.address 收货地址\n * @param {string} orderData.remark 备注\n */\nexport const createOrder = (orderData) => {\n  return new Promise((resolve) => {\n    // 模拟处理时间\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        data: {\n          orderId: 'ORD' + Date.now(),\n          totalPrice: orderData.totalPrice,\n          items: orderData.items,\n          contactName: orderData.contactName,\n          phone: orderData.phone,\n          address: orderData.address,\n          remark: orderData.remark,\n          createTime: new Date().toISOString(),\n          status: 0\n        },\n        msg: \"下单成功\"\n      });\n    }, 800);\n  });\n};\r\n\r\n/**\n * 获取订单列表\n */\nexport const getOrderList = () => {\n  return new Promise((resolve) => {\n    // 模拟数据\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        data: [\n          {\n            orderId: 'ORD123456789',\n            totalPrice: 88.00,\n            items: [\n              { \n                id: 1, \n                name: \"宫保鸡丁\", \n                price: 28.00, \n                quantity: 2 \n              },\n              { \n                id: 3, \n                name: \"清炒时蔬\", \n                price: 18.00, \n                quantity: 1 \n              }\n            ],\n            contactName: \"张三\",\n            phone: \"13800138000\",\n            address: \"北京市朝阳区某某街道123号\",\n            remark: \"请尽快送达\",\n            status: 0, // 0=待接单\n            createTime: new Date().toISOString()\n          },\n          {\n            orderId: 'ORD987654321',\n            totalPrice: 56.00,\n            items: [\n              { \n                id: 2, \n                name: \"红烧肉\", \n                price: 38.00, \n                quantity: 1 \n              },\n              { \n                id: 4, \n                name: \"米饭\", \n                price: 2.00, \n                quantity: 2 \n              },\n              { \n                id: 5, \n                name: \"酸辣汤\", \n                price: 14.00, \n                quantity: 1 \n              }\n            ],\n            contactName: \"李四\",\n            phone: \"13900139000\",\n            address: \"北京市海淀区某某小区5号楼\",\n            remark: \"不要辣\",\n            status: 2, // 2=派送中\n            createTime: \"2023-05-19T18:30:00Z\"\n          },\n          {\n            orderId: 'ORD567891234',\n            totalPrice: 120.00,\n            items: [\n              { \n                id: 6, \n                name: \"烤鸭\", \n                price: 98.00, \n                quantity: 1 \n              },\n              { \n                id: 7, \n                name: \"春饼\", \n                price: 10.00, \n                quantity: 2 \n              },\n              { \n                id: 8, \n                name: \"黄瓜条\", \n                price: 6.00, \n                quantity: 2 \n              }\n            ],\n            contactName: \"王五\",\n            phone: \"13700137000\",\n            address: \"北京市西城区某某胡同12号\",\n            remark: \"\",\n            status: 3, // 3=已完成\n            createTime: \"2023-05-18T12:15:00Z\"\n          }\n        ],\n        msg: \"获取成功\"\n      });\n    }, 500);\n  });\n};\r\n\r\n/**\n * 获取订单详情（模拟接口）\n * @param {string} orderId - 订单ID\n * @returns {Promise<Object>} 订单详情数据\n */\nexport const getOrderDetail = (orderId) => {\n  return new Promise((resolve) => {\n    // 模拟延迟响应\n    setTimeout(() => {\n      // 模拟订单数据\n      const mockOrder = {\n        code: 200,\n        data: {\n          orderId: orderId || 'ORD123456789',\n          status: 3,\n          totalPrice: 88.50,\n          createTime: '2025-06-06 12:30:45',\n          contact: {\n            name: '张三',\n            phone: '13812345678',\n            address: '北京市朝阳区建国路88号'\n          },\n          items: [\n            {\n              id: 1,\n              name: '宫保鸡丁',\n              price: 28.00,\n              quantity: 2\n            },\n            {\n              id: 2,\n              name: '鱼香肉丝',\n              price: 26.00,\n              quantity: 1\n            },\n            {\n              id: 3,\n              name: '米饭',\n              price: 2.50,\n              quantity: 2\n            }\n          ]\n        },\n        msg: '获取成功'\n      };\n\n      resolve(mockOrder);\n    }, 800); // 800ms延迟\n  });\n};"],"names":[],"mappings":"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"}